plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.twenty'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// base
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // jpa
	implementation 'org.springframework.boot:spring-boot-starter-validation' //validation
	implementation 'org.springframework.boot:spring-boot-starter-web' // web

	// security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // oauth2
	implementation 'org.springframework.boot:spring-boot-starter-security' // security

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // thymeleaf
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // 타임리프 layout
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // devtools

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// database
	runtimeOnly 'com.h2database:h2' // h2-in memory
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // maria db

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// monitering
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // actuator
	implementation 'io.micrometer:micrometer-core'
	implementation 'io.micrometer:micrometer-registry-prometheus' // 프로메테우스

	// firebase admin
	implementation 'com.google.firebase:firebase-admin:9.1.1'

	//gpt
	implementation "com.theokanning.openai-gpt3-java:api:0.13.0"
	implementation "com.theokanning.openai-gpt3-java:service:0.13.0"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// cloud watch
	implementation'ca.pjer:logback-awslogs-appender:1.6.0'

	// stomp
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.security:spring-security-messaging'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// markdown
	implementation 'org.commonmark:commonmark:0.18.2'
}


tasks.named('test') {
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", project.getProperty("jasypt.encryptor.password")
}

jar{
	enabled = false
}


// Query dsl: delete Q Class
clean {
	delete file('src/main/generated')
}
